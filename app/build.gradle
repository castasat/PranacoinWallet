//file:noinspection GrDeprecatedAPIUsage
plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'org.jetbrains.kotlin.android'
    id "androidx.navigation.safeargs.kotlin"
    id "com.google.gms.google-services"
    id "com.google.firebase.crashlytics"
    id "com.google.android.libraries.mapsplatform.secrets-gradle-plugin"
}

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    namespace 'io.github.castasat.pranacoin_wallet'
    compileSdk ANDROID_COMPILE_SDK_VERSION
    signingConfigs {
        defaultConfig {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    defaultConfig {
        applicationId "io.github.castasat.pranacoin_wallet"
        archivesBaseName = "io.github.castasat.pranacoin_wallet."
        minSdk ANDROID_MIN_SDK_VERSION
        targetSdk ANDROID_TARGET_SDK_VERSION
        versionCode 3_00_01
        versionName "3.00.01"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables { useSupportLibrary = true }
        multiDexEnabled true
        signingConfig signingConfigs.defaultConfig
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_11
            targetCompatibility JavaVersion.VERSION_11
        }
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }
    bundle {
        language {
            // We want to be able to switch the locale at runtime using AppLocale!
            enableSplit = false
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.defaultConfig
            debuggable false
            zipAlignEnabled true
            minifyEnabled true
            shrinkResources true
            jniDebuggable = false
            renderscriptDebuggable = false
            multiDexEnabled = true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.defaultConfig
            debuggable true
            zipAlignEnabled true
            minifyEnabled false
            shrinkResources false
            jniDebuggable = true
            renderscriptDebuggable = true
            multiDexEnabled = true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions { jvmTarget = '1.8' }
    applicationVariants.configureEach { final variant ->
        variant.outputs.configureEach {
            outputFileName = "${archivesBaseName}-${defaultConfig.versionName}-${variant.buildType.name}.apk"
        }
    }
    dependenciesInfo {
        includeInApk true
        includeInBundle true
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1,groovy-release-info.properties,DEPENDENCIES,LICENSE.md,LICENSE-notice.md,aop-ajc.xml}'
        }
    }
    lint {
        checkReleaseBuilds true
    }
    buildFeatures {
        buildConfig = true
    }
    configurations.configureEach {
        resolutionStrategy {
            force "org.jetbrains.kotlin:kotlin-stdlib:$kotlinCompilerVersion", "org.jetbrains.kotlin:kotlin-stdlib-common:$kotlinCompilerVersion"
            force "androidx.emoji2:emoji2-views-helper:$emojiVersion"
            force "androidx.emoji2:emoji2:$emojiVersion"
        }
    }
}
configurations {
    cleanedAnnotations
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.google.android.material:material:1.12.0-alpha03'
    // androidx support library
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.legacy:legacy-support-core-ui:1.0.0'
    implementation 'androidx.legacy:legacy-support-v13:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.legacy:legacy-preference-v14:1.0.0'

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.core:core-ktx:1.13.0-alpha05'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.constraintlayout:constraintlayout-solver:2.0.4'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.4.0-alpha01'
    implementation 'androidx.recyclerview:recyclerview-selection:1.2.0-alpha01'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.2.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.palette:palette-ktx:1.0.0'
    implementation 'androidx.exifinterface:exifinterface:1.3.7'

    // navigation library
    implementation 'androidx.navigation:navigation-fragment-ktx:2.7.7'
    implementation 'androidx.navigation:navigation-ui-ktx:2.7.7'

    // google architecture components
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.7.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:2.7.0"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.7.0'
    implementation 'androidx.lifecycle:lifecycle-reactivestreams-ktx:2.7.0'

    // okhttp
    implementation 'com.squareup.okhttp3:okhttp:4.11.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.11.0'

    // retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava3:2.9.0'

    // rxjava
    implementation 'io.reactivex.rxjava3:rxjava:3.1.3'
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    implementation 'com.github.akarnokd:rxjava3-extensions:3.0.1'

    // zxing
    implementation 'com.journeyapps:zxing-android-embedded:3.6.0'

    // google services
    implementation 'com.google.android.gms:play-services-auth:21.0.0'
    // firebase
    // auth
    implementation 'com.google.firebase:firebase-auth:22.3.1'
    // crashlytics
    implementation 'com.google.firebase:firebase-crashlytics-ktx:18.6.2'
    // analytics
    implementation 'com.google.firebase:firebase-analytics-ktx:21.5.1'
}