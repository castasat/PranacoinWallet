apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: "androidx.navigation.safeargs.kotlin"

/* TODO
// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
*/

android
{
  /* TODO signingConfigs
  {
    config
    {
      keyAlias keystoreProperties['keyAlias']
      keyPassword keystoreProperties['keyPassword']
      storeFile file(keystoreProperties['storeFile'])
      storePassword keystoreProperties['storePassword']
    }
  }*/
  compileSdkVersion 29
  
  defaultConfig
  {
    applicationId "com.openyogaland.denis.pranacoin_wallet_2_0"
    archivesBaseName = "com.openyogaland.denis.pranacoin_wallet_2_0"
    minSdkVersion 16
    targetSdkVersion 29
    versionCode 1
    versionName "0.0.1"
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    vectorDrawables {
      useSupportLibrary = true
    }
    multiDexEnabled true
    /* TODO
    signingConfig signingConfigs.config
    */
    javaCompileOptions {
      annotationProcessorOptions {
        arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
      }
    }
    compileOptions {
      sourceCompatibility '1.8'
      targetCompatibility '1.8'
    }
    kotlinOptions {
      jvmTarget = "1.8"
    }
  }
  buildToolsVersion '29.0.2'
  buildTypes
  {
    release
    {
      /* TODO
      signingConfig signingConfigs.config
      */
      debuggable false
      zipAlignEnabled true
      minifyEnabled true
      shrinkResources true
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
    debug
    {
      /* TODO
      signingConfig signingConfigs.config
      */
      debuggable true
      zipAlignEnabled true
      minifyEnabled false
      shrinkResources false
      jniDebuggable = true
      renderscriptDebuggable = true
      multiDexEnabled = true
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }
  applicationVariants.all { final variant ->
    variant.outputs.all {
      outputFileName = "${archivesBaseName}-${defaultConfig.versionName}-${variant.buildType.name}.apk"
    }
  }
  lintOptions
  {
    checkReleaseBuilds true
  }
}

repositories {
  google()
  jcenter()
  mavenCentral()
}

configurations {
  cleanedAnnotations
  
  all {
    resolutionStrategy {
      // do not upgrade to -beta2 until issue is fixed
      // force 'androidx.constraintlayout:constraintlayout:2.0.0-beta1'
      // do not upgrade above 3.12.0 to support API < 21 while server uses
      // COMPATIBLE_TLS, or okhttp3 is used in project
      //force 'com.squareup.okhttp3:okhttp:3.12.0'
      //force 'com.squareup.okhttp3:logging-interceptor:3.12.0'
      
      dependencySubstitution {
        substitute module('io.reactivex.rxjava2:rxjava') with module('io.reactivex.rxjava3:rxjava:3.0.0-RC3')
      }
    }
  }
}

androidExtensions {
  experimental = true // to use @Parcelize
}

dependencies
{
  implementation fileTree(include: ['*.jar'], dir: 'libs')
  
  // kotlin support
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
  
  // support material design
  implementation 'com.google.android.material:material:1.2.0-alpha01'
  
  // androidx support library
  implementation 'androidx.legacy:legacy-support-v4:1.0.0'
  implementation 'androidx.legacy:legacy-support-core-ui:1.0.0'
  implementation 'androidx.legacy:legacy-support-v13:1.0.0'
  implementation 'androidx.legacy:legacy-support-v4:1.0.0'
  implementation 'androidx.legacy:legacy-preference-v14:1.0.0'
  implementation 'androidx.appcompat:appcompat:1.1.0'
  implementation 'androidx.core:core-ktx:1.2.0-beta02'
  implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta3'
  implementation 'androidx.constraintlayout:constraintlayout-solver:2.0.0-beta3'
  implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
  implementation 'androidx.recyclerview:recyclerview:1.1.0-rc01'
  implementation 'androidx.recyclerview:recyclerview-selection:1.1.0-alpha06'
  implementation 'androidx.coordinatorlayout:coordinatorlayout:1.1.0-rc01'
  implementation 'androidx.multidex:multidex:2.0.1'
  implementation 'androidx.cardview:cardview:1.0.0'
  implementation 'androidx.palette:palette:1.0.0'
  implementation 'androidx.exifinterface:exifinterface:1.1.0-rc01'
  
  // navigation library
  implementation 'androidx.navigation:navigation-fragment-ktx:2.2.0-rc02'
  implementation 'androidx.navigation:navigation-ui-ktx:2.2.0-rc02'
  
  // google architecture components
  implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0-rc02'
  implementation 'androidx.lifecycle:lifecycle-common-java8:2.2.0-rc02'
  implementation 'androidx.lifecycle:lifecycle-reactivestreams:2.2.0-rc02'
  implementation 'androidx.lifecycle:lifecycle-common-java8:2.2.0-rc02'
  implementation 'androidx.room:room-runtime:2.2.1'
  implementation 'androidx.room:room-guava:2.2.1'
  implementation 'androidx.room:room-ktx:2.2.1'
  implementation 'androidx.room:room-rxjava2:2.2.1'
  implementation "android.arch.paging:runtime:1.0.1"
  
  implementation 'com.squareup.okhttp3:okhttp:4.2.2'
  
  // retrofit2 REST API connection library
  implementation 'com.squareup.retrofit2:retrofit:2.6.2'
  implementation 'com.squareup.retrofit2:converter-gson:2.6.2'
  implementation 'com.squareup.retrofit2:converter-scalars:2.6.2'
  
  // Retrofit ReactiveX adapter
  implementation 'com.squareup.retrofit2:adapter-rxjava2:2.6.2'
  
  // ReactiveX
  implementation 'io.reactivex.rxjava3:rxjava:3.0.0-RC3'
  implementation "com.github.akarnokd:rxjava3-extensions:3.0.0-RC3"
  implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
  implementation 'io.reactivex.rxjava2:rxkotlin:2.4.0'
  
  // Dagger2 dependency injection
  //implementation 'com.google.dagger:dagger:2.22.1'
  //implementation 'com.google.dagger:dagger-android-support:2.22.1'
  
  implementation 'com.android.volley:volley:1.1.0'
  implementation 'com.journeyapps:zxing-android-embedded:3.6.0'
  
  // add the Firebase SDK for Google Analytics
  implementation 'com.google.firebase:firebase-analytics:17.2.1'
  // add SDKs for any other desired Firebase products
  implementation 'com.google.firebase:firebase-auth:19.1.0'
  // https://firebase.google.com/docs/android/setup#available-libraries
  // needed for Firebase authentication with Google account
  implementation 'com.google.android.gms:play-services-auth:17.0.0'
  
  // additional annotation processors
  kapt 'androidx.room:room-compiler:2.2.1'
  //kapt 'com.google.dagger:dagger-compiler:2.22.1'
  //kapt 'com.google.dagger:dagger-android-processor:2.22.1'
  
  // unit test libraries
  //testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.5.0'
  //testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.0'
  //testImplementation 'org.junit.platform:junit-platform-engine:1.5.0'
  //testImplementation 'org.apiguardian:apiguardian-api:1.1.0'
  //testImplementation 'androidx.arch.core:core-testing:2.1.0-beta01'
  //testImplementation 'androidx.room:room-testing:2.1.0'
  
  // instrumental test libraries
  //androidTestImplementation 'androidx.test:runner:1.3.0-alpha01'
  //androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0-alpha01'
  androidTestImplementation "androidx.room:room-testing:2.2.1"
  
  // leak detection
  //debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.0-alpha-2'
}

// Add to the bottom of the file
/* TODO
apply plugin: 'com.google.gms.google-services'
*/